@model ApplicationPerformance.Models.Goal

@{
    ViewBag.Title = "Edit";
}
@if (Session["manager"] != null)
{
    <div class="breadcrumb" style="margin-top:15px; font-size: 13px; background: #fff; border-radius: 0; padding: 25px 12px 0 15px; color: #6e6e6f;">
        <a href='@Url.Action("SelectedEmployee", "Goals", new { id = @ViewBag.ID })' class="crown"><i class="icon-angle-right"></i></a><a href='@Url.Action("SelectedEmployee", "Goals", new { id = @ViewBag.ID })' class="home">Employee Appraisail Plan</a>
        <span class="active-bc"> / Edit</span>
    </div>
}
<h2>Edit</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Objective</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.GoalID)

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Session["employee"] != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ManagerComment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ManagerComment, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.ManagerComment, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.ManagerApproval, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.ManagerApproval, htmlAttributes: new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ManagerApproval, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.FinalApproval, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.FinalApproval, htmlAttributes: new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.FinalApproval, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ManagerComment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ManagerComment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ManagerComment, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ManagerApproval, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.ManagerApproval, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ManagerApproval, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.FinalApproval, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.FinalApproval, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FinalApproval, "", new { @class = "text-danger" })
                </div>
            </div>

        }
        @if (Session["manager"] != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeComment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmployeeComment, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.EmployeeComment, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeApproval, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.EmployeeApproval, htmlAttributes: new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.EmployeeApproval, "", new { @class = "text-danger" })
                </div>
            </div>

        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeComment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmployeeComment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmployeeComment, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeApproval, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.EmployeeApproval, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EmployeeApproval, "", new { @class = "text-danger" })
                </div>
            </div>

        }

        <div class="form-group">
            @Html.LabelFor(model => model.ObjectiveID, "ObjectiveID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ObjectiveID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ObjectiveID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.SystemUserID, "SystemUserID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SystemUserID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SystemUserID, "", new { @class = "text-danger" })
                </div>
            </div>*@






        <div class="form-group">
            @Html.LabelFor(model => model.AppraisalID, "AppraisalID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AppraisalID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AppraisalID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GoalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.GoalStatus, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GoalStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>



    <button class="btn btn-searching" style="margin-bottom:10px; margin-left:10px; color:white; background-color:#266f91; border:none; padding:5px; border-radius:2px;" onclick="location.href='@Url.Action("SelectedEmployee", "Goals", new { id = @ViewBag.ID })'">Back to Employee Page</button>

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
