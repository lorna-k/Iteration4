@model ApplicationPerformance.Models.Goal

@{
    ViewBag.Title = "Team Objectives";
}
<br />
<h2>Team objective</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
      
        <h4>Assign Team Objectives</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.ManagerComment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManagerComment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManagerComment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeComment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeComment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeComment, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="row" style="background-color:azure">
            <div class="col-md-1"> </div>

            <div class="col-md-3">
                @*@Html.LabelFor(model => model.SystemUserID, "SystemUserID", htmlAttributes: new { @class = "control-label col-md-2" })*@
                <h4>Employee Selection</h4>
                <br />

                @Html.ListBox("SystemUserID", (MultiSelectList)ViewBag.SystemUserID, new { size = 10 })


                @*@Html.DropDownList("SystemUserID", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.SystemUserID, "", new { @class = "text-danger" })

            </div>



            <div class="col-md-5">
                @*@Html.LabelFor(model => model.ObjectiveID, "ObjectiveID", htmlAttributes: new { @class = "control-label col-md-2" })*@
                <h4 style="align-items:center">Objective Selection</h4>

                <br />
               
                    @*@Html.DropDownList("ObjectiveID", null, htmlAttributes: new { @class = "select2-offscreen" })*@
                    @Html.ListBox("ObjectiveID", (MultiSelectList)ViewBag.ObjectiveID, new { size = 10 })


                    @Html.ValidationMessageFor(model => model.ObjectiveID, "", new { @class = "text-danger" })
              
            </div>

     
            <div class="col-md-3" style="align-content:initial;">
<strong>Appraisal Date</strong>                
                    @Html.DropDownList("AppraisalID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AppraisalID, "", new { @class = "text-danger" })
                <strong>Weight</strong>
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                <strong>Manager's Approval</strong>
                @Html.EnumDropDownListFor(model => model.ManagerApproval, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ManagerApproval, "", new { @class = "text-danger" })

            </div>

        </div>

        <div class="row">
            <div class="col-md-2">
                <button class="glyphicon-search">
                    @Html.ActionLink("Back to List", "Index")
                </button>
                </div>

                <div class="col-md-8">

                </div>


                <div class="col-md-2">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>

            </div>

        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.AppraisalID, "AppraisalID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AppraisalID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AppraisalID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.GoalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.GoalStatus, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GoalStatus, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.ManagerApproval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ManagerApproval, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ManagerApproval, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.EmployeeApproval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.EmployeeApproval, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmployeeApproval, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.FinalApproval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.FinalApproval, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FinalApproval, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@
}





